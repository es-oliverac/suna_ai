# Kortix/Suna EasyPanel Configuration
# Copy this file to .env and fill in your values
# 
# IMPORTANT: Change ALL default values before deploying to production!
# Generate secure random values for all secrets using:
#   openssl rand -base64 32    (for base64 keys)
#   openssl rand -hex 32       (for hex keys)

# =============================================================================
# DATABASE CONFIGURATION (PostgreSQL)
# =============================================================================
POSTGRES_DB=suna
POSTGRES_USER=suna_user
POSTGRES_PASSWORD=suna_password_change_me_to_something_secure

# JWT Secret for authentication (REQUIRED - MIN 32 CHARS)
# Generate with: openssl rand -base64 32
JWT_SECRET=your_super_secure_jwt_secret_key_here_min_32_chars

# Database connection pool settings
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30
DB_POOL_TIMEOUT=30

# =============================================================================
# DOMAIN CONFIGURATION
# =============================================================================
# Your EasyPanel domain (REQUIRED - Change this to your actual domain)
# This should be the full URL where your Suna instance will be accessible
WEBHOOK_BASE_URL=https://your-domain.com

# Internal service URLs (usually don't need to change these)
BACKEND_INTERNAL_URL=http://backend:8000
FRONTEND_INTERNAL_URL=http://frontend:3000
REDIS_URL=redis://redis:6379
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}

# =============================================================================
# LLM PROVIDERS (At least one is REQUIRED)
# =============================================================================
# Get these from the respective providers:

# OpenAI (https://platform.openai.com/api-keys)
# Most popular and reliable option
OPENAI_API_KEY=sk-...

# Anthropic Claude (https://console.anthropic.com/)
# Excellent for reasoning and long contexts
ANTHROPIC_API_KEY=sk-ant-...

# OpenRouter (https://openrouter.ai/keys)
# Access to multiple models through one API
OPENROUTER_API_KEY=sk-or-...

# Google Gemini (https://console.cloud.google.com/)
# Good for multimodal tasks
GEMINI_API_KEY=...

# Groq (https://console.groq.com/keys)
# Very fast inference
GROQ_API_KEY=gsk_...

# xAI Grok (https://console.x.ai/)
# Latest model from xAI
XAI_API_KEY=xai-...

# Morph (https://morphllm.com/api-keys) - Optional but recommended
# Optimized for code editing and generation
MORPH_API_KEY=...

# AWS Bedrock (optional, only if using AWS Bedrock)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION_NAME=us-east-1

# OpenAI Compatible APIs (optional, for custom endpoints)
OPENAI_COMPATIBLE_API_KEY=
OPENAI_COMPATIBLE_API_BASE=

# =============================================================================
# SEARCH & SCRAPING APIs (REQUIRED)
# =============================================================================
# Tavily Search API (https://app.tavily.com/)
TAVILY_API_KEY=tvly-...

# Firecrawl API (https://firecrawl.dev/)
FIRECRAWL_API_KEY=fc-...
# Optional: Self-hosted Firecrawl URL (leave empty for default)
FIRECRAWL_URL=

# RapidAPI (https://rapidapi.com/) - for additional data sources
RAPID_API_KEY=...

# =============================================================================
# AGENT SANDBOX (REQUIRED for agent execution)
# =============================================================================
# Daytona API (https://app.daytona.io/)
DAYTONA_API_KEY=...
DAYTONA_SERVER_URL=https://app.daytona.io/api
DAYTONA_TARGET=us

# =============================================================================
# SECURITY & ENCRYPTION KEYS (ALL REQUIRED)
# =============================================================================
# IMPORTANT: Generate all these keys with secure random values!

# MCP Credential Encryption Key (REQUIRED)
# Generate with: openssl rand -base64 32
MCP_CREDENTIAL_ENCRYPTION_KEY=...

# General encryption key (REQUIRED)
# Generate with: openssl rand -base64 32
ENCRYPTION_KEY=...

# Webhook secret for secure webhook communication (REQUIRED)
# Generate with: openssl rand -hex 32
TRIGGER_WEBHOOK_SECRET=...

# Admin API Key (REQUIRED)
# Generate with: openssl rand -hex 32
KORTIX_ADMIN_API_KEY=...

# Session secret for secure sessions (REQUIRED)
# Generate with: openssl rand -base64 32
SESSION_SECRET=...

# CORS settings
CORS_ORIGINS=https://your-domain.com,http://localhost:3000
CORS_ALLOW_CREDENTIALS=true

# =============================================================================
# INTEGRATIONS (Optional)
# =============================================================================
# Composio (https://app.composio.dev/settings/api-keys)
COMPOSIO_API_KEY=
COMPOSIO_WEBHOOK_SECRET=
COMPOSIO_API_BASE=https://backend.composio.dev

# Google OAuth (for Google Slides integration)
# Get from Google Cloud Console
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# =============================================================================
# OBSERVABILITY (Optional)
# =============================================================================
# Langfuse (https://cloud.langfuse.com/)
LANGFUSE_PUBLIC_KEY=
LANGFUSE_SECRET_KEY=
LANGFUSE_HOST=https://cloud.langfuse.com

# PostHog Analytics (https://posthog.com/)
POSTHOG_KEY=

# Edge Config (Vercel Edge Config - optional)
EDGE_CONFIG=

# =============================================================================
# BILLING (Optional - for paid features)
# =============================================================================
# Stripe (https://dashboard.stripe.com/apikeys)
STRIPE_SECRET_KEY=
STRIPE_WEBHOOK_SECRET=
STRIPE_DEFAULT_PLAN_ID=
STRIPE_DEFAULT_TRIAL_DAYS=14

# =============================================================================
# MCP INTEGRATIONS (Optional)
# =============================================================================
# Pipedream (https://pipedream.com/)
PIPEDREAM_PROJECT_ID=
PIPEDREAM_CLIENT_ID=
PIPEDREAM_CLIENT_SECRET=
PIPEDREAM_X_PD_ENVIRONMENT=production

# =============================================================================
# ZENDESK INTEGRATION (Optional)
# =============================================================================
ZENDESK_AUTH_CONFIG=

# =============================================================================
# PERFORMANCE & SCALING SETTINGS
# =============================================================================
# Worker settings for background tasks
WORKER_PROCESSES=4
WORKER_THREADS=4
WORKER_MAX_MEMORY=2GB

# Rate limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_API_CALLS_PER_MINUTE=100

# Cache settings
REDIS_CACHE_TTL=3600
REDIS_SESSION_TTL=86400

# File upload limits
MAX_FILE_SIZE=100MB
MAX_FILES_PER_UPLOAD=10

# =============================================================================
# MONITORING & LOGGING
# =============================================================================
# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Enable performance monitoring
ENABLE_METRICS=true
METRICS_PORT=9090

# Health check settings
HEALTH_CHECK_TIMEOUT=30
HEALTH_CHECK_INTERVAL=60

# =============================================================================
# NOTES FOR EASYPANEL DEPLOYMENT
# =============================================================================
# 1. WEBHOOK_BASE_URL: Set this to your EasyPanel domain (e.g., https://suna.yourdomain.com)
# 2. At least one LLM provider API key is required for the system to work
# 3. TAVILY_API_KEY and FIRECRAWL_API_KEY are required for search and scraping
# 4. DAYTONA_API_KEY is required for agent execution in sandboxed environments
# 5. Generate strong random values for ALL security keys using the provided commands
# 6. All optional integrations can be left empty but may limit functionality
# 7. Default admin login: admin@suna.local / SunaAdmin123! (change after first login)

# =============================================================================
# SECURITY RECOMMENDATIONS
# =============================================================================
# - Use strong, unique passwords for POSTGRES_PASSWORD (min 16 characters)
# - Generate cryptographically secure random strings for ALL secrets
# - Keep all API keys secure and never commit them to version control
# - Use HTTPS in production (EasyPanel handles this automatically)
# - Regularly rotate API keys and secrets (recommended: every 90 days)
# - Monitor access logs for suspicious activity
# - Enable two-factor authentication where possible
# - Keep your Suna installation updated to the latest version